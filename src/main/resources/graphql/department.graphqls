extend type Query {
    departments(
        orderBy: [DepartmentOrder!]
    ): DepartmentConnection
}

extend type Mutation {
    createDepartment(input: CreateDepartmentInput!): CreateDepartmentPayload
    updateDepartment(input: UpdateDepartmentInput!): UpdateDepartmentPayload
    deleteDepartment(input: DeleteDepartmentInput!): DeleteDepartmentPayload
}

type DepartmentEdge {
    node: Department
}

type DepartmentConnection {
    edges: [DepartmentEdge]
    totalCount: Int!
}

type Department implements Node {
    id: ID!
    name: String
    employees(
        orderBy: [EmployeeOrder!]
    ): EmployeeConnection
}

input DepartmentOrder {
    id: OrderDirection
    name: OrderDirection
}

input CreateDepartmentInput {
    name: String
}

type CreateDepartmentPayload {
    node: Department
}

input UpdateDepartmentInput {
    id: ID!
    name: String
}

type UpdateDepartmentPayload {
    node: Department
}

input DeleteDepartmentInput {
    id: ID!
}

type DeleteDepartmentPayload {
    id: ID!
}